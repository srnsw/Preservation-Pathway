<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" 
    xmlns:beans="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
    <!-- HTTP security configurations -->
    <http auto-config="true" use-expressions="true">
        <form-login login-processing-url="/resources/j_spring_security_check" login-page="/login" authentication-failure-url="/login?login_error=t" />
        <logout logout-url="/resources/j_spring_security_logout" />
        <!-- Configure these elements to secure URIs in your application -->
        <intercept-url pattern="/purposes/**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/member/**" access="isAuthenticated()" />
        <intercept-url pattern="/**" access="permitAll" />
    </http>
    <!-- Configure Authentication mechanism -->
    
	<authentication-manager>
	    <authentication-provider>
	    		<password-encoder hash="md5"/>
	        <jdbc-user-service data-source-ref="userDataSource" users-by-username-query="select email,password, approved
	        from people where email=?" 
	         authorities-by-username-query="select p.email, rr.role_type from people p, resource_role rr, resource r 
		      where r.name ='PreservationPath' and rr.resource=r.id and rr.people = p.id and p.email =?" />
	    </authentication-provider>
	</authentication-manager>
	    
</beans:beans>